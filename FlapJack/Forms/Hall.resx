<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrMatches.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="tmrPlayersList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>144, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>69</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA3MQAAERFdABsZPQUUFF0XFRVkJxERZCwTFHZTFBV/VA4OfEUREXUxExNkFBsaQgQCA3sAQ0ABAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAqKSQACAiIABIRZREREXZJDQ6HnwwPk9cNE5nrERmh7BIaqPwRGa79EBey+g4SqvAND5rPDQ6Uqg4P
        hmYREW0ZAAD/AB0cIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFhZiACMjMAENDXxCDQ2VvQ0Qp/cQGLj/IS/F9DJGzsU3SruyKDWGwyQxg9ErO7W7ITDG0RIZ
        sfkPEbX/DxCz/Q0OmM0OEIpaFxdwBhMTewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        gA/4A8Af/AfgH/x//j////////////////8=
</value>
  </data>
</root>